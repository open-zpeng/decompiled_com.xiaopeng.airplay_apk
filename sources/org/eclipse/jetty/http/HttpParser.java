package org.eclipse.jetty.http;

import java.io.IOException;
import org.eclipse.jetty.io.Buffer;
import org.eclipse.jetty.io.BufferCache;
import org.eclipse.jetty.io.Buffers;
import org.eclipse.jetty.io.EndPoint;
import org.eclipse.jetty.io.EofException;
import org.eclipse.jetty.io.View;
import org.eclipse.jetty.io.bio.StreamEndPoint;
import org.eclipse.jetty.util.log.Log;
import org.eclipse.jetty.util.log.Logger;
/* loaded from: classes.dex */
public class HttpParser implements Parser {
    private static final Logger LOG = Log.getLogger(HttpParser.class);
    public static final int STATE_CHUNK = 6;
    public static final int STATE_CHUNKED_CONTENT = 3;
    public static final int STATE_CHUNK_PARAMS = 5;
    public static final int STATE_CHUNK_SIZE = 4;
    public static final int STATE_CONTENT = 2;
    public static final int STATE_END = 0;
    public static final int STATE_END0 = -8;
    public static final int STATE_END1 = -7;
    public static final int STATE_EOF_CONTENT = 1;
    public static final int STATE_FIELD0 = -13;
    public static final int STATE_FIELD2 = -6;
    public static final int STATE_HEADER = -5;
    public static final int STATE_HEADER_IN_NAME = -3;
    public static final int STATE_HEADER_IN_VALUE = -1;
    public static final int STATE_HEADER_NAME = -4;
    public static final int STATE_HEADER_VALUE = -2;
    public static final int STATE_SEEKING_EOF = 7;
    public static final int STATE_SPACE1 = -12;
    public static final int STATE_SPACE2 = -9;
    public static final int STATE_START = -14;
    public static final int STATE_STATUS = -11;
    public static final int STATE_URI = -10;
    private Buffer _body;
    private Buffer _buffer;
    private final Buffers _buffers;
    private BufferCache.CachedBuffer _cached;
    protected int _chunkLength;
    protected int _chunkPosition;
    protected long _contentLength;
    protected long _contentPosition;
    protected final View _contentView;
    private final EndPoint _endp;
    protected byte _eol;
    private boolean _forceContentBuffer;
    private final EventHandler _handler;
    private boolean _headResponse;
    private Buffer _header;
    protected int _length;
    private String _multiLineValue;
    private boolean _persistent;
    private int _responseStatus;
    protected int _state;
    private final View.CaseInsensitive _tok0;
    private final View.CaseInsensitive _tok1;

    public HttpParser(Buffer buffer, EventHandler handler) {
        this._contentView = new View();
        this._state = -14;
        this._endp = null;
        this._buffers = null;
        this._header = buffer;
        this._buffer = buffer;
        this._handler = handler;
        this._tok0 = new View.CaseInsensitive(this._header);
        this._tok1 = new View.CaseInsensitive(this._header);
    }

    public HttpParser(Buffers buffers, EndPoint endp, EventHandler handler) {
        this._contentView = new View();
        this._state = -14;
        this._buffers = buffers;
        this._endp = endp;
        this._handler = handler;
        this._tok0 = new View.CaseInsensitive();
        this._tok1 = new View.CaseInsensitive();
    }

    public long getContentLength() {
        return this._contentLength;
    }

    public long getContentRead() {
        return this._contentPosition;
    }

    public void setHeadResponse(boolean head) {
        this._headResponse = head;
    }

    public int getState() {
        return this._state;
    }

    public boolean inContentState() {
        return this._state > 0;
    }

    public boolean inHeaderState() {
        return this._state < 0;
    }

    public boolean isChunking() {
        return this._contentLength == -2;
    }

    @Override // org.eclipse.jetty.http.Parser
    public boolean isIdle() {
        return isState(-14);
    }

    @Override // org.eclipse.jetty.http.Parser
    public boolean isComplete() {
        if (this._responseStatus > 0) {
            return isState(0) || isState(7);
        }
        return isState(0);
    }

    @Override // org.eclipse.jetty.http.Parser
    public boolean isMoreInBuffer() throws IOException {
        return (this._header != null && this._header.hasContent()) || (this._body != null && this._body.hasContent());
    }

    public boolean isState(int state) {
        return this._state == state;
    }

    @Override // org.eclipse.jetty.http.Parser
    public boolean isPersistent() {
        return this._persistent;
    }

    @Override // org.eclipse.jetty.http.Parser
    public void setPersistent(boolean persistent) {
        this._persistent = persistent;
        if (this._persistent) {
            return;
        }
        if (this._state == 0 || this._state == -14) {
            this._state = 7;
        }
    }

    public void parse() throws IOException {
        if (this._state == 0) {
            reset();
        }
        if (this._state != -14) {
            throw new IllegalStateException("!START");
        }
        while (this._state != 0 && parseNext() >= 0) {
        }
    }

    @Override // org.eclipse.jetty.http.Parser
    public boolean parseAvailable() throws IOException {
        boolean progress = parseNext() > 0;
        while (!isComplete() && this._buffer != null && this._buffer.length() > 0 && !this._contentView.hasContent()) {
            progress |= parseNext() > 0;
        }
        return progress;
    }

    /* JADX WARN: Removed duplicated region for block: B:257:0x04df  */
    /* JADX WARN: Removed duplicated region for block: B:258:0x04e3 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:260:0x04e9 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:261:0x04ed A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:272:0x0511 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:273:0x051a A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:371:0x0788 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:379:0x07b5  */
    /* JADX WARN: Removed duplicated region for block: B:380:0x07b8 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:389:0x07f3 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:396:0x0828 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:420:0x0880 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:43:0x00c8 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:465:0x0935 A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:51:0x00dc A[Catch: HttpException -> 0x09ea, TryCatch #2 {HttpException -> 0x09ea, blocks: (B:3:0x0005, B:6:0x000a, B:8:0x000e, B:9:0x0014, B:11:0x001a, B:13:0x0022, B:15:0x002c, B:24:0x0067, B:52:0x00dd, B:54:0x00e6, B:55:0x00f1, B:57:0x00fd, B:59:0x0101, B:61:0x0105, B:63:0x010c, B:66:0x011b, B:67:0x0121, B:68:0x0126, B:69:0x0127, B:70:0x012d, B:75:0x0138, B:76:0x013b, B:77:0x0141, B:78:0x0144, B:80:0x0148, B:82:0x0150, B:83:0x0165, B:85:0x0169, B:86:0x0173, B:87:0x01a7, B:90:0x01b0, B:91:0x01b3, B:93:0x01b7, B:94:0x01bc, B:96:0x01d1, B:98:0x01d5, B:100:0x01dd, B:101:0x01f2, B:103:0x01f6, B:104:0x0200, B:105:0x0234, B:110:0x0242, B:111:0x0245, B:112:0x024f, B:114:0x0253, B:116:0x0257, B:117:0x026b, B:118:0x0271, B:119:0x0276, B:121:0x027a, B:122:0x028e, B:127:0x029c, B:128:0x029f, B:130:0x02a6, B:131:0x02ab, B:132:0x02bf, B:134:0x02c3, B:136:0x02c7, B:137:0x02db, B:139:0x02e3, B:141:0x02e7, B:142:0x02fb, B:148:0x030b, B:150:0x030f, B:152:0x0317, B:154:0x031f, B:214:0x041b, B:219:0x042a, B:221:0x0437, B:223:0x044b, B:225:0x046c, B:227:0x0470, B:229:0x0476, B:231:0x047c, B:233:0x0482, B:248:0x04b2, B:250:0x04bc, B:252:0x04c4, B:254:0x04ce, B:255:0x04d6, B:259:0x04e6, B:260:0x04e9, B:274:0x0523, B:261:0x04ed, B:263:0x04f1, B:265:0x04f7, B:270:0x0501, B:272:0x0511, B:273:0x051a, B:258:0x04e3, B:234:0x0487, B:236:0x048f, B:238:0x0493, B:240:0x0499, B:242:0x049f, B:245:0x04a6, B:246:0x04ab, B:156:0x0323, B:158:0x0327, B:160:0x0332, B:162:0x033a, B:164:0x0344, B:172:0x0359, B:175:0x0361, B:176:0x0368, B:178:0x0370, B:180:0x0375, B:181:0x037f, B:182:0x0380, B:184:0x0390, B:185:0x0395, B:187:0x03a3, B:188:0x03a8, B:192:0x03b3, B:193:0x03b9, B:194:0x03ba, B:201:0x03ca, B:202:0x03cd, B:203:0x03d1, B:205:0x03df, B:212:0x03fa, B:210:0x03f2, B:211:0x03f6, B:213:0x03fd, B:163:0x033d, B:159:0x032a, B:277:0x052a, B:282:0x0539, B:284:0x053d, B:286:0x0572, B:290:0x0581, B:285:0x0555, B:295:0x05b0, B:297:0x05b4, B:298:0x05e3, B:300:0x0607, B:302:0x0613, B:305:0x062f, B:308:0x0659, B:313:0x0679, B:317:0x068b, B:318:0x06b9, B:325:0x06cc, B:326:0x06d1, B:327:0x06d2, B:329:0x06db, B:330:0x06e5, B:333:0x06ee, B:337:0x070e, B:343:0x0726, B:344:0x072b, B:345:0x072c, B:348:0x0738, B:351:0x074e, B:353:0x0752, B:355:0x0756, B:357:0x075a, B:359:0x0760, B:364:0x076a, B:365:0x0773, B:366:0x077e, B:369:0x0784, B:371:0x0788, B:372:0x078d, B:374:0x0793, B:376:0x079d, B:377:0x07ad, B:378:0x07b2, B:498:0x09e0, B:380:0x07b8, B:382:0x07c1, B:388:0x07ec, B:383:0x07ca, B:385:0x07d2, B:387:0x07de, B:389:0x07f3, B:391:0x07fb, B:394:0x0803, B:396:0x0828, B:400:0x0837, B:402:0x083d, B:404:0x0843, B:406:0x084b, B:408:0x0855, B:409:0x085d, B:413:0x0864, B:415:0x086f, B:420:0x0880, B:433:0x089f, B:439:0x08b3, B:444:0x08c9, B:445:0x08d7, B:446:0x08ed, B:447:0x08ee, B:448:0x08f4, B:450:0x08fd, B:452:0x0903, B:454:0x090b, B:456:0x0915, B:457:0x091d, B:461:0x0924, B:463:0x092f, B:465:0x0935, B:474:0x095b, B:471:0x094a, B:472:0x0950, B:476:0x0966, B:478:0x0971, B:482:0x0978, B:484:0x0983, B:486:0x0988, B:487:0x0989, B:489:0x09ab, B:493:0x09b2, B:496:0x09bd, B:26:0x006d, B:28:0x0073, B:30:0x007b, B:32:0x007f, B:33:0x009f, B:35:0x00a3, B:36:0x00a6, B:38:0x00ac, B:39:0x00b1, B:43:0x00c8, B:45:0x00ce, B:48:0x00d5, B:49:0x00da, B:51:0x00dc, B:40:0x00b9, B:41:0x00c3, B:22:0x005b, B:19:0x0039), top: B:508:0x0005, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:553:0x0966 A[SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:554:0x09bd A[SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public int parseNext() throws java.io.IOException {
        /*
            Method dump skipped, instructions count: 2646
            To view this dump add '--comments-level debug' option
        */
        throw new UnsupportedOperationException("Method not decompiled: org.eclipse.jetty.http.HttpParser.parseNext():int");
    }

    protected int fill() throws IOException {
        if (this._buffer == null) {
            this._buffer = getHeaderBuffer();
        }
        if (this._state > 0 && this._buffer == this._header && this._header != null && !this._header.hasContent() && this._body != null && this._body.hasContent()) {
            this._buffer = this._body;
            return this._buffer.length();
        }
        if (this._buffer == this._header && this._state > 0 && this._header.length() == 0 && ((this._forceContentBuffer || this._contentLength - this._contentPosition > this._header.capacity()) && (this._body != null || this._buffers != null))) {
            if (this._body == null) {
                this._body = this._buffers.getBuffer();
            }
            this._buffer = this._body;
        }
        if (this._endp != null) {
            if (this._buffer == this._body || this._state > 0) {
                this._buffer.compact();
            }
            if (this._buffer.space() == 0) {
                LOG.warn("HttpParser Full for {} ", this._endp);
                this._buffer.clear();
                StringBuilder sb = new StringBuilder();
                sb.append("Request Entity Too Large: ");
                sb.append(this._buffer == this._body ? "body" : "head");
                throw new HttpException(413, sb.toString());
            }
            try {
                int filled = this._endp.fill(this._buffer);
                return filled;
            } catch (IOException e) {
                LOG.debug(e);
                if (e instanceof EofException) {
                    throw e;
                }
                throw new EofException(e);
            }
        }
        return -1;
    }

    @Override // org.eclipse.jetty.http.Parser
    public void reset() {
        this._contentView.setGetIndex(this._contentView.putIndex());
        this._state = this._persistent ? -14 : this._endp.isInputShutdown() ? 0 : 7;
        this._contentLength = -3L;
        this._contentPosition = 0L;
        this._length = 0;
        this._responseStatus = 0;
        if (this._eol == 13 && this._buffer != null && this._buffer.hasContent() && this._buffer.peek() == 10) {
            this._eol = this._buffer.get();
        }
        if (this._body != null && this._body.hasContent()) {
            if (this._header == null) {
                getHeaderBuffer();
            } else {
                this._header.setMarkIndex(-1);
                this._header.compact();
            }
            int take = this._header.space();
            if (take > this._body.length()) {
                take = this._body.length();
            }
            this._body.peek(this._body.getIndex(), take);
            this._body.skip(this._header.put(this._body.peek(this._body.getIndex(), take)));
        }
        if (this._header != null) {
            this._header.setMarkIndex(-1);
            this._header.compact();
        }
        if (this._body != null) {
            this._body.setMarkIndex(-1);
        }
        this._buffer = this._header;
        returnBuffers();
    }

    @Override // org.eclipse.jetty.http.Parser
    public void returnBuffers() {
        if (this._body != null && !this._body.hasContent() && this._body.markIndex() == -1 && this._buffers != null) {
            if (this._buffer == this._body) {
                this._buffer = this._header;
            }
            if (this._buffers != null) {
                this._buffers.returnBuffer(this._body);
            }
            this._body = null;
        }
        if (this._header != null && !this._header.hasContent() && this._header.markIndex() == -1 && this._buffers != null) {
            if (this._buffer == this._header) {
                this._buffer = null;
            }
            this._buffers.returnBuffer(this._header);
            this._header = null;
        }
    }

    public void setState(int state) {
        this._state = state;
        this._contentLength = -3L;
    }

    public String toString(Buffer buf) {
        return "state=" + this._state + " length=" + this._length + " buf=" + buf.hashCode();
    }

    public String toString() {
        return String.format("%s{s=%d,l=%d,c=%d}", getClass().getSimpleName(), Integer.valueOf(this._state), Integer.valueOf(this._length), Long.valueOf(this._contentLength));
    }

    public Buffer getHeaderBuffer() {
        if (this._header == null) {
            this._header = this._buffers.getHeader();
            this._tok0.update(this._header);
            this._tok1.update(this._header);
        }
        return this._header;
    }

    public Buffer getBodyBuffer() {
        return this._body;
    }

    public void setForceContentBuffer(boolean force) {
        this._forceContentBuffer = force;
    }

    public Buffer blockForContent(long maxIdleTime) throws IOException {
        if (this._contentView.length() > 0) {
            return this._contentView;
        }
        if (getState() <= 0 || isState(7)) {
            return null;
        }
        try {
            parseNext();
            while (this._contentView.length() == 0 && !isState(0) && !isState(7) && this._endp != null && this._endp.isOpen()) {
                if (!this._endp.isBlocking()) {
                    if (parseNext() <= 0) {
                        if (!this._endp.blockReadable(maxIdleTime)) {
                            this._endp.close();
                            throw new EofException("timeout");
                        }
                    }
                }
                parseNext();
            }
            if (this._contentView.length() > 0) {
                return this._contentView;
            }
            return null;
        } catch (IOException e) {
            this._endp.close();
            throw e;
        }
    }

    public int available() throws IOException {
        if (this._contentView != null && this._contentView.length() > 0) {
            return this._contentView.length();
        }
        if (this._endp.isBlocking()) {
            return (this._state <= 0 || !(this._endp instanceof StreamEndPoint) || ((StreamEndPoint) this._endp).getInputStream().available() <= 0) ? 0 : 1;
        }
        parseNext();
        if (this._contentView == null) {
            return 0;
        }
        return this._contentView.length();
    }

    /* loaded from: classes.dex */
    public static abstract class EventHandler {
        public abstract void content(Buffer buffer) throws IOException;

        public abstract void startRequest(Buffer buffer, Buffer buffer2, Buffer buffer3) throws IOException;

        public abstract void startResponse(Buffer buffer, int i, Buffer buffer2) throws IOException;

        public void headerComplete() throws IOException {
        }

        public void messageComplete(long contentLength) throws IOException {
        }

        public void parsedHeader(Buffer name, Buffer value) throws IOException {
        }

        public void earlyEOF() {
        }
    }
}
